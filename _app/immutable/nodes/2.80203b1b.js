import{S as A,i as G,s as K,k as v,a as x,q as U,l as T,m as S,h as s,c as C,r as P,n as E,b as f,G as M,J as q,H as D,K as V,I as J,t as F,L as Q}from"../chunks/index.950ad7d9.js";import{s as R,g as H,i as j,t as z,a as I,N as W,m as X,b as Z,l as B,u as $,r as N}from"../chunks/note.f4ecef2d.js";function ee({fetch:l,params:i}){return{fetch:l}}const ne=Object.freeze(Object.defineProperty({__proto__:null,load:ee},Symbol.toStringTag,{value:"Module"}));function te(l){let i,r,o,d,c,a,p,u,h,m,_;return{c(){i=v("h2"),r=x(),o=v("button"),d=U("❋"),c=x(),a=v("button"),p=U(l[1]),u=x(),h=v("div"),this.h()},l(e){i=T(e,"H2",{id:!0});var n=S(i);n.forEach(s),r=C(e),o=T(e,"BUTTON",{id:!0});var b=S(o);d=P(b,"❋"),b.forEach(s),c=C(e),a=T(e,"BUTTON",{id:!0});var g=S(a);p=P(g,l[1]),g.forEach(s),u=C(e),h=T(e,"DIV",{id:!0});var t=S(h);t.forEach(s),this.h()},h(){E(i,"id","fullheader"),E(o,"id","light_btn"),E(a,"id","loggedin_btn"),E(h,"id","page")},m(e,n){f(e,i,n),i.innerHTML=l[0],f(e,r,n),f(e,o,n),M(o,d),f(e,c,n),f(e,a,n),M(a,p),f(e,u,n),f(e,h,n),m||(_=[q(o,"click",l[2]),q(a,"click",l[4])],m=!0)},p(e,[n]){n&1&&(i.innerHTML=e[0])},i:D,o:D,d(e){e&&s(i),e&&s(r),e&&s(o),e&&s(c),e&&s(a),e&&s(u),e&&s(h),m=!1,V(_)}}}function oe(l,i,r){let o,d;J(l,B,t=>r(10,o=t)),J(l,$,t=>r(11,d=t));let{data:c}=i;var a,p="<br>";a=`<a href=/ onclick="window.location.href = '${window.origin}'; location.reload();" id=homebtn>sciepedia</a>`,p=a,F().then(n);let u;const h=`Click me and write something: xzxysl ... &^

You can create a new link with # followed by text, for example: #link #recursion #whatever

Click on a link to open a page. If the page already exists, it will be displayed to you.

Almost forgot! Create an account: {}/login, and then you can create public pages.

If you want to learn more, check out: #sciepedia:kormann
`;let m,_,e=d[0];console.log(d);async function n(){R(),window.fetch=c.fetch,o&&document.body.classList.add("light"),u=document.createElement("div"),u.innerHTML="<p>this is a pred</p><p>this is a pred</p><p>this is a pred</p>",u.id="pred",a=`<a href=/ onclick="window.location.href = '${window.origin}'; location.reload();" id=homebtn>sciepedia</a>`,r(0,p=a);let t=window.location.search;_=[H(N.path)],t&&t.length>1&&(t=t.slice(1),j(t)||(t="#"+t),j(t)&&(_.push(_[0]),N.path=t)),m=document.querySelector("#page"),window.addEventListener("scroll",w=>{r(0,p=a);let Y={element:{offsetTop:0},fullpath:"<span id=homebtn>sciepedia</span>"};z.forEach(L=>{window.scrollY+L.element.offsetHeight>L.element.offsetTop&&Y.element.offsetTop<L.element.offsetTop})});const O=H("_tutorial:"+d);I.has(O)||I.setitem({Path:O,Content:h.replace("{}",window.location.origin),id:crypto.randomUUID()});let y=H(N.path);if(!I.has(y)){const w={Path:y,Content:`welcome to sciepedia
try out the tutorial: _tutorial`,id:crypto.randomUUID()};localStorage[JSON.stringify(w.Path)]=JSON.stringify(w)}let k=new W("_home",y);z.push({element:k.head.title_element,fullpath:y}),m.appendChild(k.element),document.body.addEventListener("click",w=>{w.target==document.body&&X(null)}),window.addEventListener("onunload",w=>{localStorage.unloading=!0,k.body.free(),localStorage.unloaded=!0}),Z().then(()=>{k.body.spellcheck()})}function b(){Q(B,o=!o,o)}const g=()=>{window.location.pathname="login"};return l.$$set=t=>{"data"in t&&r(3,c=t.data)},[p,e,b,c,g]}class le extends A{constructor(i){super(),G(this,i,oe,te,K,{data:3})}}export{le as component,ne as universal};
